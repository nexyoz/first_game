# 风扇碰撞系统使用说明

## 功能概述
这套脚本实现了以下功能：
1. 风扇使用两帧图片切换实现动画效果
2. 风扇与玩家碰撞时触发玩家死亡
3. 风扇可选粒子效果增强视觉表现
4. 简单的玩家控制和死亡机制

## 使用方法

### 1. 设置风扇

#### 基础设置：
1. 在场景中创建一个空的游戏对象
2. 添加 `FanSetup` 脚本
3. 将您的两张风扇状态图片分别指定为 `fanFrame1` 和 `fanFrame2`
4. 可选：指定 `fanBase` 作为风扇的静态底座部分
5. 调整设置：
   - `useCollider` - 是否启用碰撞检测（默认开启）
   - `useTrigger` - 是否使用触发器碰撞（默认关闭）

#### 高级设置：
1. 直接在游戏对象上添加 `move` 脚本（FanSetup会自动添加）
2. 调整动画速度 `animationSpeed`（每秒切换帧的次数）
3. 如需视觉效果，添加 `FanParticleEffect` 脚本并调整粒子效果

### 2. 设置玩家

1. 创建玩家游戏对象
2. 添加 `PlayerController` 脚本
3. 确保玩家标签设置为 "Player"（脚本会自动设置此标签）
4. 调整移动速度和跳跃力量
5. 可选：添加死亡效果预制体到 `deathEffect` 字段

### 3. 碰撞设置

确保以下两点之一：
- 为地面物体添加 "Ground" 标签（用于玩家跳跃检测）
- 风扇上的 `move` 脚本中 `isDeadly` 设置为 true

## 脚本说明

### move.cs
控制风扇帧动画和玩家碰撞死亡处理。
- `fanFrames`：风扇的两个状态图片数组
- `animationSpeed`：动画切换速度（每秒多少帧）
- `isDeadly`：是否启用致命碰撞

### FanSetup.cs
帮助快速设置风扇的外观和物理属性。
- 自动设置风扇帧动画
- 支持分层显示风扇底座和叶片
- 自动配置碰撞器和物理属性

### PlayerController.cs
简单的2D平台角色控制器，包含死亡和复活功能。
- 水平移动和跳跃控制
- 玩家被风扇杀死后会重新加载场景

### FanParticleEffect.cs
为风扇添加可视化粒子效果。
- 可调整粒子颜色、大小和发射速率
- 在运行时可以修改效果

## 提示与注意事项

1. 两帧风扇图片应该显示风扇叶片在不同位置，以产生动画效果
2. 可以通过增加`animationSpeed`值来加快风扇切换速度
3. 确保碰撞器的大小与风扇危险区域匹配
4. 粒子效果可以帮助玩家更清楚地看到危险区域
5. 如果你想让风扇推动玩家而不是杀死玩家，可以修改 `move.cs` 中的 `KillPlayer` 方法 